name: test
on:
  pull_request:
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@05b148adc31e091bafbaf404f745055d4d3bc9d2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to ECR
      uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
      with:
        registry: ${{ secrets.ECR_REGISTRY }}
    - name: Cache "vendor" directory
      id: cache
      uses: actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09
      with:
        path: ./vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Run "composer install" (if "vendor" is NOT cached)
      if: steps.cache.outputs.cache-hit != 'true'
      run: composer install -n --prefer-dist
    - name: Pull a docker image for dev
      run: docker pull ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_NAME }}:dev
    - name: Up containers
      run: ./vendor/bin/sail up -d
      env:
        APP_ENV: testing
    - name: Execute unit and feature tests
      run: ./vendor/bin/sail test --do-not-cache-result
      env:
        APP_ENV: testing
