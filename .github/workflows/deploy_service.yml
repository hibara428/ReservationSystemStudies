name: deploy_service
on:
  pull_request:
    branches:
    - main
    types:
    - closed
  workflow_dispatch:
jobs:
  tag:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      TAG_NAME: ${{ steps.create-tag.outputs.TAG_NAME }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Tagging
      id: create-tag
      run: |
        git tag v0.0.3
        git push origin v0.0.3
        echo "::set-output name=TAG_NAME::v0.0.3"

  build-image:
    runs-on: ubuntu-latest
    needs: tag
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to ECR
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ECR_REGISTRY }}
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY_NAME }}
        flavor: latest=auto
        tags: type=raw,value={{ needs.tag.outputs.TAG_NAME }}
    - name: Build & Push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./infra/docker/Dockerfile
        build-args: |
          WWWGROUP=${{ secrets.WWWGROUP }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs:
    - tag
    - build-image
    steps:
    - name: No deployment
      run: echo 'No deployment now'
