---
AWSTemplateFormatVersion: 2010-09-09
Description: ECS task definition

Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name - dev or prod
    Default: dev
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: Specify either dev or prod

  NetworkStackName:
    Type: String
    Description: Name of an active CloudFormation stack that contains networking resources
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

  DatabaseStackName:
    Type: String
    Description: Name of an optional active CloudFormation stack that contains database resources
    Default: ""

  AppIngressPort:
    Description: The application ingress port used by security groups
    Type: Number
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535
    Default: 80

  DockerRepositoryUri:
    Type: String
    Description: The URI of docker repository

  DockerImageTag:
    Type: String
    Description: The tag of docker image.
    Default: latest

  ContainerCpu:
    Type: Number
    Description: "Amount of CPU for the container - options available: https://aws.amazon.com/fargate/pricing/"
    Default: 256
    MinValue: 256
    MaxValue: 4096
    ConstraintDescription: "Value must be between 256 and 4096 - see: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size"

  ContainerMemory:
    Type: Number
    Description: "Amount of memory for the container - options available: https://aws.amazon.com/fargate/pricing/"
    Default: 512
    MinValue: 512
    MaxValue: 30720
    ConstraintDescription: "Value must be between 512 and 30720 - see: https://aws.amazon.com/fargate/pricing/"

  ContainerLogRetentionInDays:
    Type: Number
    Default: 7

  AppKey:
    Type: String
    Description: The environment value of "APP_KEY"

Conditions:
  IsProd: !Equals [ !Ref EnvironmentName, prod ]

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref AWS::StackName
      RequiresCompatibilities:
        - FARGATE
      Cpu: !Ref ContainerCpu
      Memory: !Ref ContainerMemory
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: !Sub ${AWS::StackName}-${EnvironmentName}
          Image: !Sub ${DockerRepositoryUri}:${DockerImageTag}
          Essential: true
          PortMappings:
            - ContainerPort: !Ref AppIngressPort
          Environment:
            - Name: ENVIRONMENT_NAME
              Value: !Ref EnvironmentName
            - Name: APP_ENV
              Value: !If [ IsProd, "production", "development" ]
            - Name: APP_KEY
              Value: !Ref AppKey
            - Name: APP_DEBUG
              Value: !If [ IsProd, true, false ]
            - Name: APP_URL
              Value: !Sub
                - https://${DomainName}
                - DomainName:
                    Fn::ImportValue: !Sub '${NetworkStackName}-ApplicationLoadBalancerDnsName'
            - Name: DB_CONNECTION
              Value:
                Fn::ImportValue: !Sub "${DatabaseStackName}-DatabaseEngine"
            - Name: DB_HOST
              Value:
                Fn::ImportValue: !Sub "${DatabaseStackName}-DatabaseURL"
            - Name: DB_PORT
              Value:
                Fn::ImportValue: !Sub "${DatabaseStackName}-DatabasePort"
            - Name: DB_DATABASE
              Value:
                Fn::ImportValue: !Sub "${DatabaseStackName}-DatabaseName"
            - Name: DB_USERNAME
              Value:
                Fn::ImportValue: !Sub "${DatabaseStackName}-DatabaseUser"
            - Name: DB_PASSWORD
              Value:
                Fn::ImportValue: !Sub "${DatabaseStackName}-DatabasePassword"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: !Ref AWS::StackName

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /fargate/${AWS::StackName}/${EnvironmentName}
      RetentionInDays: !Ref ContainerLogRetentionInDays

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

Outputs:
  Name:
    Description: Fargate Stack Name
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${AWS::StackName}-Name

  EnvironmentName:
    Description: Environment Name
    Value: !Ref EnvironmentName
    Export:
      Name: !Sub ${AWS::StackName}-EnvironmentName

  EcsTaskDefinition:
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub ${AWS::StackName}-TaskDefinition
