---
AWSTemplateFormatVersion: 2010-09-09
Description: VPC + ECS(base) + ALB + RDS

Parameters:
  # Common parameters
  EnvironmentName:
    Type: String
    Description: Environment name - dev or prod
    Default: dev
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: Specify either dev or prod
  TemplateBucketStackName:
    Type: String
    Description: Template bucket stack name
    Default: reservation-system-studies-cfn-templates-bucket
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"
  AppIngressPort:
    Type: Number
    Description: The application ingress port used by security groups
    Default: 80
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535
  ALBIngressPort:
    Type: Number
    Description: The ALB ingress port used by security groups
    Default: 443
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535
  Subdomain:
    Type: String
    Description: The subdomain
    Default: reservation
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: The Route 53 Hosted Zone ID
  HostedZoneName:
    Type: String
    Description: The optional Amazon Route 53 Hosted Zone Name for the optional load balancer alias record - do not include a period at the end
    AllowedPattern: "(^$|^((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+[A-Za-z]{2,6}$)" # Allow for a blank or a domain name
    ConstraintDescription: Please enter a valid Route 53 Hosted Zone Name

  # Secret Manager
  AppSecretId:
    Type: String
    Description: The App secret ID of secrets manager
    Default: dev/ReservationSystemStudies/app
  DatabaseSecretId:
    Type: String
    Description: The RDS secret ID of secrets manager
    Default: dev/ReservationSystemStudies/mysql

  # vpc.cfn.yml parameters
  AvailabilityZone1:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: The first availability zone in the region
    Default: ap-northeast-1a
    ConstraintDescription: Must be a valid availability zone
  AvailabilityZone2:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: The second availability zone in the region
    Default: ap-northeast-1c
    ConstraintDescription: Must be a valid availability zone

  # rds.cfn.yml parameters
  DatabaseEngine:
    Type: String
    Description: Database engines - MySQL
    Default: mysql
    ConstraintDescription: Choose an engine from the drop down
    AllowedValues:
      - mysql
  EncryptionAtRest:
    Type: String
    Description: The optional flag for encryption at rest (db.t2.small and above)
    Default: false
    ConstraintDescription: Only true or false are allowed
    AllowedValues:
      - true
      - false
  DatabaseSize:
    Type: String
    Description: Database storage size in gigabytes (GB) - Not applicable for Aurora
    Default: 5
    MinLength: 1
    AllowedPattern: "[5-9]|[1-9][0-9]+"
    ConstraintDescription: Enter a size of at least 5 GB
  DatabaseInstanceClass:
    Type: String
    Description: "Database instance class, e.g. db.t2.micro (free tier) - Engine support: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html"
    Default: db.t2.small
    ConstraintDescription: DB instance class not supported
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge

  # ecs-task.cfn.yml parameters
  DockerImageTag:
    Type: String
    Description: The tag of docker image.
    Default: latest
  ContainerCpu:
    Type: Number
    Description: "Amount of CPU for the container - options available: https://aws.amazon.com/fargate/pricing/"
    Default: 256
    MinValue: 256
    MaxValue: 4096
    ConstraintDescription: "Value must be between 256 and 4096 - see: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size"
  ContainerMemory:
    Type: Number
    Description: "Amount of memory for the container - options available: https://aws.amazon.com/fargate/pricing/"
    Default: 512
    MinValue: 512
    MaxValue: 30720
    ConstraintDescription: "Value must be between 512 and 30720 - see: https://aws.amazon.com/fargate/pricing/"
  ContainerLogRetentionInDays:
    Type: Number
    Description: Number of days to retain container logs
    Default: 7
  EcrReposStackName:
    Type: String
    Description: ECR repository stack name
    Default: reservation-system-studies-ecr-repos
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

  # fargate-service.cfn.yml parameters
  AppProtocol:
    Type: String
    Description: The application server protocol
    Default: HTTP
    AllowedValues:
      - HTTP
      - HTTPS
    ConstraintDescription: Specify either HTTTP or HTTPS
  HealthCheckPath:
    Type: String
    Description: The path for the Application Load Balancer health check
    Default: /api/health
    MinLength: 1
    MaxLength: 255
    ConstraintDescription: Value must be between 1 and 255 characters
  ServiceScaleEvaluationPeriods:
    Type: Number
    Description: The number of periods over which data is compared to the specified threshold
    Default: 2
    MinValue: 2
  ServiceCpuScaleOutThreshold:
    Type: Number
    Description: Average CPU % value to trigger auto scaling out
    Default: 50
    MinValue: 0
    MaxValue: 100
    ConstraintDescription: Value must be between 0 and 100
  ServiceCpuScaleInThreshold:
    Type: Number
    Description: Average CPU % value to trigger auto scaling down
    Default: 25
    MinValue: 0
    MaxValue: 100
    ConstraintDescription: Value must be between 0 and 100
  TaskMinContainerCount:
    Type: Number
    Description: Minimum number of containers to run for the service
    Default: 1
    MinValue: 1
    ConstraintDescription: Value must be at least one
  TaskMaxContainerCount:
    Type: Number
    Description: Maximum number of containers to run for the service when auto scaling out
    Default: 2
    MinValue: 1
    ConstraintDescription: Value must be at least one

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Environment
        Parameters:
          - EnvironmentName
          - TemplateBucketStackName
          - AppSecretId
          - DatabaseSecretId
      - Label:
          default: Region Availability Zones
        Parameters:
          - AvailabilityZone1
          - AvailabilityZone2
      - Label:
          default: Database
        Parameters:
          - DatabaseEngine
          - DatabaseInstanceClass
          - DatabaseSize
          - EncryptionAtRest
      - Label:
          default: Application Global
        Parameters:
          - AppIngressPort
          - AppProtocol
      - Label:
          default: Initial Service
        Parameters:
          - HealthCheckPath
          - DockerImageTag
          - ContainerCpu
          - ContainerMemory
          - ServiceScaleEvaluationPeriods
          - ServiceCpuScaleOutThreshold
          - ServiceCpuScaleInThreshold
          - TaskMinContainerCount
          - TaskMaxContainerCount
          - ContainerLogRetentionInDays
          - EcrReposStackName
      - Label:
          default: Load Balancer
        Parameters:
          - ALBIngressPort
          - HostedZoneName
          - Subdomain
    ParameterLabels:
      AvailabilityZone1:
        default: Availability Zone 1
      AvailabilityZone2:
        default: Availability Zone 2
      ALBIngressPort:
        default: Port
      AppIngressPort:
        default: Port
      AppProtocol:
        default: Protocol
      EnvironmentName:
        default: Environment
      HealthCheckPath:
        default: Health Check Path
      ContainerCpu:
        default: CPU
      ContainerMemory:
        default: Memory
      ServiceScaleEvaluationPeriods:
        default: Scale Periods
      ServiceCpuScaleOutThreshold:
        default: Scale Out CPU
      ServiceCpuScaleInThreshold:
        default: Scale In CPU
      TaskMinContainerCount:
        default: Min Containers
      TaskMaxContainerCount:
        default: Max Containers
      ContainerLogRetentionInDays:
        default: Log Retention
      HostedZoneName:
        default: Hosted Zone
      DatabaseSize:
        default: Size
      DatabaseEngine:
        default: Engine
      EncryptionAtRest:
        default: Encryption at Rest
      DatabaseInstanceClass:
        default: Instance Type

Conditions:
  IsProd: !Equals [ !Ref EnvironmentName, prod ]

Resources:
  #----------------------------------------------
  # VPC
  #----------------------------------------------
  VpcStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://s3.amazonaws.com/${TemplateBucket}/templates/vpc.cfn.yml
        - TemplateBucket:
            Fn::ImportValue: !Sub ${TemplateBucketStackName}-BucketName
      Parameters:
        AvailabilityZone1: !Ref AvailabilityZone1
        AvailabilityZone2: !Ref AvailabilityZone2
        SingleNatGateway: !If [ IsProd, false, true ]

  #----------------------------------------------
  # RDS
  #----------------------------------------------
  RdsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://s3.amazonaws.com/${TemplateBucket}/templates/rds.cfn.yml
        - TemplateBucket:
            Fn::ImportValue: !Sub ${TemplateBucketStackName}-BucketName
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        NetworkStackName: !GetAtt VpcStack.Outputs.Name
        DatabaseSecretId: !Ref DatabaseSecretId
        DatabaseSize: !Ref DatabaseSize
        DatabaseEngine: !Ref DatabaseEngine
        EncryptionAtRest: !Ref EncryptionAtRest
        DatabaseInstanceClass: !Ref DatabaseInstanceClass
        SecurityGroup: !GetAtt SecurityGroupStack.Outputs.DatabaseSecurityGroup

  #----------------------------------------------
  # ECS
  #----------------------------------------------
  FargateServiceStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://s3.amazonaws.com/${TemplateBucket}/templates/fargate-service.cfn.yml
        - TemplateBucket:
            Fn::ImportValue: !Sub ${TemplateBucketStackName}-BucketName
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        NetworkStackName: !GetAtt VpcStack.Outputs.Name
        AlbStackName: !GetAtt AlbStack.Outputs.Name
        RdsStackName: !GetAtt RdsStack.Outputs.Name
        AppSecretId: !Ref AppSecretId
        DatabaseSecretId: !Ref DatabaseSecretId
        DockerRepositoryUri:
          Fn::ImportValue: !Sub ${EcrReposStackName}-EcrDockerRepositoryUri
        DockerImageTag: !Ref DockerImageTag
        ContainerCpu: !Ref ContainerCpu
        ContainerMemory: !Ref ContainerMemory
        ContainerLogRetentionInDays: !Ref ContainerLogRetentionInDays
        HostName: !Sub ${Subdomain}.${HostedZoneName}
        AppProtocol: !Ref AppProtocol
        AppIngressPort: !Ref AppIngressPort
        AppSecurityGroup: !GetAtt SecurityGroupStack.Outputs.AppSecurityGroup
        HealthCheckPath: !Ref HealthCheckPath
        ServiceScaleEvaluationPeriods: !Ref ServiceScaleEvaluationPeriods
        ServiceCpuScaleOutThreshold: !Ref ServiceCpuScaleOutThreshold
        ServiceCpuScaleInThreshold: !Ref ServiceCpuScaleInThreshold
        TaskMinContainerCount: !Ref TaskMinContainerCount
        TaskMaxContainerCount: !Ref TaskMaxContainerCount

  #----------------------------------------------
  # ALB
  #----------------------------------------------
  AlbStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://s3.amazonaws.com/${TemplateBucket}/templates/alb.cfn.yml
        - TemplateBucket:
            Fn::ImportValue: !Sub ${TemplateBucketStackName}-BucketName
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        NetworkStackName: !GetAtt VpcStack.Outputs.Name
        SSLCertificateArn: !GetAtt AcmStack.Outputs.CertificateArn
        SecurityGroup: !GetAtt SecurityGroupStack.Outputs.ALBSecurityGroup
        HostedZoneName: !Ref HostedZoneName
        Subdomain: !Ref Subdomain
        ALBIngressPort: !Ref ALBIngressPort

  #----------------------------------------------
  # ACM
  #----------------------------------------------
  AcmStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://s3.amazonaws.com/${TemplateBucket}/templates/acm.cfn.yml
        - TemplateBucket:
            Fn::ImportValue: !Sub ${TemplateBucketStackName}-BucketName
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        Subdomain: !Ref Subdomain
        HostedZoneId: !Ref HostedZoneId
        HostedZoneName: !Ref HostedZoneName

  #----------------------------------------------
  # Security group
  #----------------------------------------------
  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://s3.amazonaws.com/${TemplateBucket}/templates/secgroup.cfn.yml
        - TemplateBucket:
            Fn::ImportValue: !Sub ${TemplateBucketStackName}-BucketName
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        NetworkStackName: !GetAtt VpcStack.Outputs.Name
        AppIngressPort: !Ref AppIngressPort
        ALBIngressPort: !Ref ALBIngressPort

Outputs:
  VpcStackName:
    Value: !GetAtt VpcStack.Outputs.Name
    Export:
      Name: !Sub ${AWS::StackName}-VpcStackName

  RdsStackName:
    Value: !GetAtt RdsStack.Outputs.Name
    Export:
      Name: !Sub ${AWS::StackName}-RdsStackName

  FargateServiceStackName:
    Value: !GetAtt FargateServiceStack.Outputs.Name
    Export:
      Name: !Sub ${AWS::StackName}-FargateServiceStackName

  AlbStackName:
    Value: !GetAtt AlbStack.Outputs.Name
    Export:
      Name: !Sub ${AWS::StackName}-AlbStackName

  AcmStackName:
    Value: !GetAtt AcmStack.Outputs.Name
    Export:
      Name: !Sub ${AWS::StackName}-AcmStackName

  SecurityGroupStackName:
    Value: !GetAtt SecurityGroupStack.Outputs.Name
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupStackName
