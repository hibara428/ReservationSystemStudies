---
AWSTemplateFormatVersion: 2010-09-09
Description: Security group

Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name - dev or prod
    Default: dev
    AllowedValues:
      - dev
      - prod
    ConstraintDescription: Specify either dev or prod

  NetworkStackName:
    Description: Name of an active CloudFormation stack that contains networking resources
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: "^[a-zA-Z][-a-zA-Z0-9]*$"

  AppIngressPort:
    Type: Number
    Description: The application ingress port used by security groups
    Default: 80
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535

  ALBIngressPort:
    Type: Number
    Description: The ALB ingress port used by security groups
    Default: 80
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535

Resources:
  # App
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access from ELB to app
      VpcId:
        Fn::ImportValue: !Sub ${NetworkStackName}-VpcID
      SecurityGroupIngress:
      - SourceSecurityGroupId: !Ref ALBSecurityGroup
        IpProtocol: tcp
        ToPort: !Ref AppIngressPort
        FromPort: !Ref AppIngressPort
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-AppSecurityGroup"
  AppSecurityGroupFromELBIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref AppSecurityGroup
      IpProtocol: tcp
      ToPort: !Ref AppIngressPort
      FromPort: !Ref AppIngressPort
      SourceSecurityGroupId: !Ref ALBSecurityGroup

  # RDS
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access to the RDS DB
      VpcId:
        Fn::ImportValue: !Sub ${NetworkStackName}-VpcID
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: tcp
        ToPort: 3306
        FromPort: 3306
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-DatabaseSecurityGroup"

  # ALB
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP/HTTPs ingress
      VpcId:
        Fn::ImportValue: !Sub ${NetworkStackName}-VpcID
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: tcp
        ToPort: !Ref ALBIngressPort
        FromPort: !Ref ALBIngressPort
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-AlbSecurityGroup"

Outputs:
  Name:
    Description: Fargate Stack Name
    Value: !Ref AWS::StackName
    Export:
      Name: !Sub ${AWS::StackName}-Name

  EnvironmentName:
    Description: Environment Name
    Value: !Ref EnvironmentName
    Export:
      Name: !Sub ${AWS::StackName}-EnvironmentName

  AppSecurityGroup:
    Description: Security group ID for app behind ALB
    Value: !GetAtt AppSecurityGroup.GroupId
    Export:
      Name: !Sub "${AWS::StackName}-AppSecurityGroupID"

  DatabaseSecurityGroup:
    Description: Security group ID for RDS
    Value: !GetAtt DatabaseSecurityGroup.GroupId
    Export:
      Name: !Sub "${AWS::StackName}-DatabaseSecurityGroupID"

  ALBSecurityGroup:
    Description: Security group ID for Internet-facing ALB
    Value: !GetAtt ALBSecurityGroup.GroupId
    Export:
      Name: !Sub "${AWS::StackName}-ALBSecurityGroupID"
